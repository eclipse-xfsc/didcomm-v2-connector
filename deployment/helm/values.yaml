# Default values for didcomm-connector.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: node-654e3bca7fbeeed18f81d7c7.ps-xaas.io/common-services
  name: didcomm-connector
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "refactoring"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  automount: true
  annotations: {}
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
# fsGroup: 2000

security:
    runAsNonRoot: false
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
# runAsUser: 1000

service:
  type: ClusterIP
  port: 9090

ingress:
  enabled: true
  ingressClassName: nginx
  annotations:
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
  hosts:
    - host: cloud-wallet.xfsc.dev
      paths:
        - path: /api/didcomm(/|$)(.*)
          port: 9090
          pathType: ImplementationSpecific
  tls:
    - secretName: xfsc-wildcard
      hosts:
        - cloud-wallet.xfsc.dev

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
#   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

config:
  env: DEV # DEV, PROD
  logLevel: "debug" # info, debug, warning, error
  label: Cloud Wallet Mediator
  port: 9090
  url: "https://cloud-wallet.xfsc.dev/api/didcomm"
  tokenExpiration: 1
  didcomm:
    resolverUrl: "http://universal-resolver-service.default.svc.cluster.local:8080"
    messageEncrypted: false

  # config for cloudEventProdvider
  messaging:
    protocol: "nats"
    nats:
      url: nats://nats.nats.svc.cluster.local:4222
      topic: "didcomm-connector"
      queueGroup: didcomm # optional
      timeoutInSec: 10 # optional
  database:
    inMemory: false
    host: cassandra.cassandra.svc.cluster.local:9042
    port: 9042
    user: "cassandra"
    password:
      passwordSecret: cassandra
      passwordKey: cassandra-password
    keyspace: didcomm_space
    dbName: cassandra
